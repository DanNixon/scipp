trigger:
  - master

pr: none

stages:
  - stage: 'code_quality'
    displayName: 'Code Quality Checks'

    jobs:
      - job: 'cpp_checks'
        displayName: 'C++ Checks'
        pool:
          vmImage: 'ubuntu-18.04'
        steps:
          - script: |
              sudo apt-get remove --yes clang libllvm6.0
              sudo add-apt-repository --yes 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main'
              sudo apt-get update
              sudo apt-get install --yes clang-format-6.0
            displayName: 'Install tooling'
          - script: ./.travis/check_clang_format.sh
            displayName: 'Run clang-format'

      - job: 'python_checks'
        displayName: 'Python Checks'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true
              architecture: 'x64'
          - script: pip install flake8 yapf==0.29.0
            displayName: 'Install tooling'
          - script: ./.travis/check_flake8.sh
            displayName: 'Run flake8'
          - script: yapf --diff --recursive 'python'
            displayName: 'Run yapf'

  - stage: 'build_and_test'
    displayName: 'Conda Package Build and Unit Tests'

    jobs:
      - job: 'linux'
        displayName: 'Linux'
        strategy:
          matrix:
            Python36:
              PYTHON_VERSION: '3.6'
            Python37:
              PYTHON_VERSION: '3.7'
        pool:
          vmImage: 'ubuntu-18.04'
        steps:
          - checkout: self
            submodules: true
          - bash: echo "##vso[task.prependpath]$CONDA/bin"
            displayName: Add Conda to PATH
          - script: |
              conda --version
              conda install --yes anaconda-client conda-build
              conda config --set always_yes yes --set changeps1 no
            displayName: 'Conda configuration'
          - script: |
              conda build --user scipp --token "$ANACONDA_TOKEN" --channel conda-forge --label dev --python="$PYTHON_VERSION" ./conda
            env:
              ANACONDA_TOKEN: $(anaconda_token_secret)
            displayName: 'Package build'

      - job: 'mac'
        displayName: 'Mac OS'
        pool:
          vmImage: 'macOS-10.14'
        variables:
          OSX_VERSION: '10.15'
        steps:
          - checkout: self
            submodules: true
          - bash: echo "##vso[task.prependpath]$CONDA/bin"
            displayName: Add Conda to PATH
          - bash: sudo chown -R $USER $CONDA
            displayName: Take ownership of Conda installation
          - script: |
              conda --version
              conda install --yes anaconda-client conda-build
              conda config --set always_yes yes --set changeps1 no
            displayName: 'Conda configuration'
          - script: |
              conda build --user scipp --token "$ANACONDA_TOKEN" --channel conda-forge --label dev ./conda
            env:
              ANACONDA_TOKEN: $(anaconda_token_secret)
            displayName: 'Package build'

      - job: 'windows'
        displayName: 'Windows'
        pool:
          vmImage: 'windows-latest'
        steps:
          - checkout: self
            submodules: true
          - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
            displayName: Add Conda to PATH
          - script: |
              conda --version
              conda install --yes anaconda-client conda-build
              conda config --set always_yes yes --set changeps1 no
            displayName: 'Conda configuration'
          - script: |
              conda build --user scipp --token "%ANACONDA_TOKEN%" --channel conda-forge --label dev ./conda
            env:
              ANACONDA_TOKEN: $(anaconda_token_secret)
            displayName: 'Package build'

  - stage: 'deploy'
    displayName: 'Deployment'

    jobs:
      - job: 'documentation'
        displayName: 'Documentation'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              curl --request POST --data 'branches=master' --data "token=$READTHEDOCS_TOKEN" 'https://readthedocs.org/api/v2/webhook/scipp/94775/'
            env:
              READTHEDOCS_TOKEN: $(readthedocs_token_secret)
            displayName: 'Trigger RTD build'

      - job: 'docker'
        displayName: 'Docker'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'DockerHub'
              command: 'login'
          - task: Docker@2
            inputs:
              containerRegistry: 'DockerHub'
              repository: 'scipp/scipp-jupyter-demo'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile'
              tags: 'latest'
          - task: Docker@2
            inputs:
              containerRegistry: 'DockerHub'
              command: 'logout'